From c214c47fb845c57e48dc5827e019b064bf1af667 Mon Sep 17 00:00:00 2001
From: James Henstridge <james@jamesh.id.au>
Date: Wed, 9 Aug 2017 22:30:21 +0800
Subject: [PATCH] privacy: add network connectivity checking toggle

NetworkManager supports toggling the periodic network check,
a check that by itself can be a security threat since it leaks
information about the host.

This patch adds a periodic network check toggle to the Privacy
panel.

https://bugzilla.gnome.org/show_bug.cgi?id=737362
---
 panels/privacy/cc-privacy-panel.c  | 75 ++++++++++++++++++++++++++
 panels/privacy/cc-privacy-panel.ui | 86 ++++++++++++++++++++++++++++++
 panels/privacy/meson.build         |  7 ++-
 3 files changed, 167 insertions(+), 1 deletion(-)

diff --git a/panels/privacy/cc-privacy-panel.c b/panels/privacy/cc-privacy-panel.c
index 91f54570a..b7feaf72e 100644
--- a/panels/privacy/cc-privacy-panel.c
+++ b/panels/privacy/cc-privacy-panel.c
@@ -18,6 +18,8 @@
  * Author: Matthias Clasen <mclasen@redhat.com>
  */
 
+#include <config.h>
+
 #include "list-box-helper.h"
 #include "cc-privacy-panel.h"
 #include "cc-privacy-resources.h"
@@ -25,6 +27,11 @@
 
 #include <gio/gdesktopappinfo.h>
 #include <glib/gi18n.h>
+#ifdef BUILD_NETWORK
+#  include <NetworkManager.h>
+#else
+typedef struct _NMClient NMClient;
+#endif
 
 #define REMEMBER_RECENT_FILES "remember-recent-files"
 #define RECENT_FILES_MAX_AGE "recent-files-max-age"
@@ -88,6 +95,11 @@ struct _CcPrivacyPanel
   GtkListBoxRow *abrt_row;
   guint          abrt_watch_id;
 
+  GtkListBoxRow *connectivity_row;
+  GtkDialog     *connectivity_dialog;
+  GtkSwitch     *connectivity_switch;
+  NMClient      *nm_client;
+
   GCancellable *cancellable;
 
   GDBusProxy *gclue_manager;
@@ -1297,6 +1309,64 @@ add_abrt (CcPrivacyPanel *self)
                                                 NULL);
 }
 
+#if defined(BUILD_NETWORK)
+static gboolean
+transform_on_off_label (GBinding     *binding G_GNUC_UNUSED,
+                        const GValue *from_value,
+                        GValue       *to_value,
+                        gpointer      user_data G_GNUC_UNUSED)
+{
+  g_value_set_string (to_value, g_value_get_boolean (from_value) ? _("On") : _("Off"));
+  return TRUE;
+}
+
+static GtkWidget *
+get_connectivity_label (NMClient *client)
+{
+  GtkWidget *w;
+
+  w = gtk_label_new ("");
+  g_object_bind_property_full (client, NM_CLIENT_CONNECTIVITY_CHECK_ENABLED,
+                               w, "label",
+                               G_BINDING_SYNC_CREATE,
+                               transform_on_off_label,
+                               NULL, NULL, NULL);
+  return w;
+}
+
+static void
+add_connectivity_check (CcPrivacyPanel *self)
+{
+  GtkWidget *w;
+
+  self->nm_client = nm_client_new (NULL, NULL);
+  if (!self->nm_client)
+    return;
+
+  w = get_connectivity_label (self->nm_client);
+  gtk_widget_show (w);
+  self->connectivity_row = add_row (self, _("Connectivity Checking"), self->connectivity_dialog, GTK_WIDGET (w));
+  g_object_bind_property (self->nm_client, NM_CLIENT_CONNECTIVITY_CHECK_AVAILABLE,
+                          self->connectivity_row, "visible",
+                          G_BINDING_SYNC_CREATE);
+
+  g_signal_connect (self->connectivity_dialog, "delete-event",
+                    G_CALLBACK (gtk_widget_hide_on_delete), NULL);
+
+  g_object_bind_property (self->nm_client, NM_CLIENT_CONNECTIVITY_CHECK_ENABLED,
+                          self->connectivity_switch, "active",
+                          G_BINDING_BIDIRECTIONAL | G_BINDING_SYNC_CREATE);
+}
+
+#else
+
+static void
+add_connectivity_check (CcPrivacyPanel *self)
+{
+}
+
+#endif
+
 static void
 cc_privacy_panel_finalize (GObject *object)
 {
@@ -1315,6 +1385,7 @@ cc_privacy_panel_finalize (GObject *object)
   g_clear_pointer ((GtkWidget **)&self->trash_dialog, gtk_widget_destroy);
   g_clear_pointer ((GtkWidget **)&self->software_dialog, gtk_widget_destroy);
   g_clear_pointer ((GtkWidget **)&self->abrt_dialog, gtk_widget_destroy);
+  g_clear_pointer ((GtkWidget **)&self->connectivity_dialog, gtk_widget_destroy);
   g_clear_object (&self->lockdown_settings);
   g_clear_object (&self->lock_settings);
   g_clear_object (&self->privacy_settings);
@@ -1327,6 +1398,7 @@ cc_privacy_panel_finalize (GObject *object)
   g_clear_pointer (&self->location_apps_perms, g_variant_unref);
   g_clear_pointer (&self->location_apps_data, g_variant_unref);
   g_clear_pointer (&self->location_app_switches, g_hash_table_unref);
+  g_clear_object (&self->nm_client);
 
   G_OBJECT_CLASS (cc_privacy_panel_parent_class)->finalize (object);
 }
@@ -1387,6 +1459,7 @@ cc_privacy_panel_init (CcPrivacyPanel *self)
   add_trash_temp (self);
   add_software (self);
   add_abrt (self);
+  add_connectivity_check (self);
 
   g_signal_connect (self->lockdown_settings, "changed",
                     G_CALLBACK (on_lockdown_settings_changed), self);
@@ -1412,6 +1485,8 @@ cc_privacy_panel_class_init (CcPrivacyPanelClass *klass)
   gtk_widget_class_bind_template_child (widget_class, CcPrivacyPanel, abrt_switch);
   gtk_widget_class_bind_template_child (widget_class, CcPrivacyPanel, automatic_screen_lock_switch);
   gtk_widget_class_bind_template_child (widget_class, CcPrivacyPanel, clear_recent_button);
+  gtk_widget_class_bind_template_child (widget_class, CcPrivacyPanel, connectivity_dialog);
+  gtk_widget_class_bind_template_child (widget_class, CcPrivacyPanel, connectivity_switch);
   gtk_widget_class_bind_template_child (widget_class, CcPrivacyPanel, empty_trash_button);
   gtk_widget_class_bind_template_child (widget_class, CcPrivacyPanel, list_box);
   gtk_widget_class_bind_template_child (widget_class, CcPrivacyPanel, location_apps_frame);
diff --git a/panels/privacy/cc-privacy-panel.ui b/panels/privacy/cc-privacy-panel.ui
index c043116a7..3a13b23fe 100644
--- a/panels/privacy/cc-privacy-panel.ui
+++ b/panels/privacy/cc-privacy-panel.ui
@@ -1269,4 +1269,90 @@ All the information we collect is made anonymous, and we will never share your d
     </child>
   </object>
 
+  <object class="GtkDialog" id="connectivity_dialog">
+    <property name="can_focus">False</property>
+    <property name="border_width">5</property>
+    <property name="title" translatable="yes">Connectivity Checking</property>
+    <property name="resizable">False</property>
+    <property name="type_hint">dialog</property>
+    <property name="use_header_bar">1</property>
+    <child internal-child="vbox">
+      <object class="GtkBox">
+        <property name="can_focus">False</property>
+        <property name="orientation">vertical</property>
+        <property name="spacing">2</property>
+        <property name="margin_start">12</property>
+        <property name="margin_end">12</property>
+        <property name="margin_top">12</property>
+        <property name="margin_bottom">12</property>
+        <child>
+          <object class="GtkLabel" id="connectivity_explanation_label">
+            <property name="visible">True</property>
+            <property name="can_focus">False</property>
+            <property name="margin_start">12</property>
+            <property name="margin_end">12</property>
+            <property name="margin_top">6</property>
+            <property name="margin_bottom">12</property>
+            <property name="xalign">0</property>
+            <property name="label" translatable="yes">Connectivity checking is used to detect connection issues and helps you to stay online. If your network communications are being monitored, it could be used to gather technical information about this computer.</property>
+            <property name="wrap">True</property>
+            <property name="max_width_chars">50</property>
+            <style>
+              <class name="dim-label"/>
+            </style>
+          </object>
+          <packing>
+            <property name="expand">False</property>
+            <property name="fill">True</property>
+            <property name="position">0</property>
+          </packing>
+        </child>
+        <child>
+          <object class="GtkGrid">
+            <property name="visible">True</property>
+            <property name="can_focus">False</property>
+            <property name="margin_start">12</property>
+            <property name="margin_end">12</property>
+            <property name="margin_top">12</property>
+            <property name="margin_bottom">12</property>
+            <property name="row_spacing">12</property>
+            <property name="column_spacing">6</property>
+            <child>
+              <object class="GtkLabel" id="connectivity_label">
+                <property name="visible">True</property>
+                <property name="can_focus">False</property>
+                <property name="hexpand">True</property>
+                <property name="label" translatable="yes">_Connectivity Checking</property>
+                <property name="use_underline">True</property>
+                <property name="mnemonic_widget">connectivity_switch</property>
+                <property name="xalign">0</property>
+              </object>
+              <packing>
+                <property name="left_attach">0</property>
+                <property name="top_attach">0</property>
+              </packing>
+            </child>
+            <child>
+              <object class="GtkSwitch" id="connectivity_switch">
+                <property name="visible">True</property>
+                <property name="can_focus">True</property>
+                <property name="halign">end</property>
+                <property name="valign">center</property>
+              </object>
+              <packing>
+                <property name="left_attach">1</property>
+                <property name="top_attach">0</property>
+              </packing>
+            </child>
+          </object>
+          <packing>
+            <property name="expand">False</property>
+            <property name="fill">True</property>
+            <property name="position">1</property>
+          </packing>
+        </child>
+      </object>
+    </child>
+  </object>
+
 </interface>
diff --git a/panels/privacy/meson.build b/panels/privacy/meson.build
index 12b436e48..121e0f5ee 100644
--- a/panels/privacy/meson.build
+++ b/panels/privacy/meson.build
@@ -29,12 +29,17 @@ sources += gnome.compile_resources(
   export: true
 )
 
+deps = common_deps
+if host_is_linux
+  deps += network_manager_deps
+endif
+
 cflags += '-DGNOMELOCALEDIR="@0@"'.format(control_center_localedir)
 
 panels_libs += static_library(
   cappletname,
   sources: sources,
   include_directories: [top_inc, common_inc],
-  dependencies: common_deps,
+  dependencies: deps,
   c_args: cflags
 )
-- 
2.20.1

