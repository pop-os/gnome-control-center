--- a/panels/display/cc-display-settings.c
+++ b/panels/display/cc-display-settings.c
@@ -51,8 +51,6 @@
   GtkWidget        *scale_row;
   GtkWidget        *scale_fractional_row;
   GtkWidget        *scale_fractional_switch;
-  GtkWidget        *underscanning_row;
-  GtkWidget        *underscanning_switch;
 };
 
 typedef struct _CcDisplaySettings CcDisplaySettings;
@@ -311,7 +309,6 @@
       gtk_widget_set_visible (self->resolution_row, FALSE);
       gtk_widget_set_visible (self->scale_row, FALSE);
       gtk_widget_set_visible (self->scale_fractional_row, FALSE);
-      gtk_widget_set_visible (self->underscanning_row, FALSE);
 
       return G_SOURCE_REMOVE;
     }
@@ -319,7 +316,6 @@
   g_object_freeze_notify ((GObject*) self->orientation_row);
   g_object_freeze_notify ((GObject*) self->refresh_rate_row);
   g_object_freeze_notify ((GObject*) self->resolution_row);
-  g_object_freeze_notify ((GObject*) self->underscanning_switch);
 
   cc_display_monitor_get_geometry (self->selected_output, NULL, NULL, &width, &height);
 
@@ -504,17 +500,10 @@
   gtk_switch_set_active (GTK_SWITCH (self->scale_fractional_switch),
                          cc_display_config_get_fractional_scaling (self->config));
 
-  gtk_widget_set_visible (self->underscanning_row,
-                          cc_display_monitor_supports_underscanning (self->selected_output) &&
-                          !cc_display_config_is_cloning (self->config));
-  gtk_switch_set_active (GTK_SWITCH (self->underscanning_switch),
-                         cc_display_monitor_get_underscanning (self->selected_output));
-
   self->updating = TRUE;
   g_object_thaw_notify ((GObject*) self->orientation_row);
   g_object_thaw_notify ((GObject*) self->refresh_rate_row);
   g_object_thaw_notify ((GObject*) self->resolution_row);
-  g_object_thaw_notify ((GObject*) self->underscanning_switch);
   self->updating = FALSE;
 
   return G_SOURCE_REMOVE;
@@ -616,20 +605,6 @@
 }
 
 static void
-on_underscanning_switch_active_changed_cb (GtkWidget         *widget,
-                                           GParamSpec        *pspec,
-                                           CcDisplaySettings *self)
-{
-  if (self->updating)
-    return;
-
-  cc_display_monitor_set_underscanning (self->selected_output,
-                                        gtk_switch_get_active (GTK_SWITCH (self->underscanning_switch)));
-
-  g_signal_emit_by_name (G_OBJECT (self), "updated", self->selected_output);
-}
-
-static void
 cc_display_settings_get_property (GObject    *object,
                                   guint       prop_id,
                                   GValue     *value,
@@ -748,13 +723,10 @@
   gtk_widget_class_bind_template_child (widget_class, CcDisplaySettings, scale_row);
   gtk_widget_class_bind_template_child (widget_class, CcDisplaySettings, scale_fractional_row);
   gtk_widget_class_bind_template_child (widget_class, CcDisplaySettings, scale_fractional_switch);
-  gtk_widget_class_bind_template_child (widget_class, CcDisplaySettings, underscanning_row);
-  gtk_widget_class_bind_template_child (widget_class, CcDisplaySettings, underscanning_switch);
 
   gtk_widget_class_bind_template_callback (widget_class, on_orientation_selection_changed_cb);
   gtk_widget_class_bind_template_callback (widget_class, on_refresh_rate_selection_changed_cb);
   gtk_widget_class_bind_template_callback (widget_class, on_resolution_selection_changed_cb);
-  gtk_widget_class_bind_template_callback (widget_class, on_underscanning_switch_active_changed_cb);
 }
 
 static void
--- a/panels/display/cc-display-settings.ui
+++ b/panels/display/cc-display-settings.ui
@@ -35,23 +35,6 @@
       </object>
     </child>
     <child>
-      <object class="HdyActionRow" id="underscanning_row">
-        <property name="width_request">100</property>
-        <property name="visible">True</property>
-        <property name="can_focus">True</property>
-        <property name="title" translatable="yes">Adjust for TV</property>
-        <child>
-          <object class="GtkSwitch" id="underscanning_switch">
-            <property name="visible">True</property>
-            <property name="can_focus">False</property>
-            <property name="halign">end</property>
-            <property name="valign">center</property>
-            <signal name="notify::active" handler="on_underscanning_switch_active_changed_cb" swapped="no"/>
-          </object>
-        </child>
-      </object>
-    </child>
-    <child>
       <object class="HdyActionRow" id="scale_row">
         <property name="width_request">100</property>
         <property name="visible">True</property>
