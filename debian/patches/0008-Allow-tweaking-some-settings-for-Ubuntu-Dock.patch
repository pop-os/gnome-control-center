From: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
Date: Wed, 15 Jan 2020 04:56:17 +0100
Subject: [PATCH 08/26] Allow tweaking some settings for Ubuntu Dock

Expose some of the settings that most users will find useful for our
Ubuntu Dock installation. Those are located in its own panel for now:
* change intellihide true/hide mode
* change dock icon size
* modify placement of the launcher (all monitor, primary or any monitors)
Origin: ubuntu
Forwarded: not-needed
---
 panels/meson.build                             |   1 +
 panels/ubuntu/cc-ubuntu-panel.c                | 571 +++++++++++++++++++++++++
 panels/ubuntu/cc-ubuntu-panel.h                |  35 ++
 panels/ubuntu/cc-ubuntu-panel.ui               | 392 +++++++++++++++++
 panels/ubuntu/gnome-ubuntu-panel.desktop.in.in |  16 +
 panels/ubuntu/meson.build                      |  43 ++
 panels/ubuntu/theme-dark.svg                   | 174 ++++++++
 panels/ubuntu/theme-light.svg                  | 171 ++++++++
 panels/ubuntu/theme-standard.svg               | 171 ++++++++
 panels/ubuntu/ubuntu.gresource.xml             |   9 +
 po/POTFILES.in                                 |   3 +
 shell/cc-panel-list.c                          |   1 +
 shell/cc-panel-loader.c                        |   3 +
 13 files changed, 1590 insertions(+)
 create mode 100644 panels/ubuntu/cc-ubuntu-panel.c
 create mode 100644 panels/ubuntu/cc-ubuntu-panel.h
 create mode 100644 panels/ubuntu/cc-ubuntu-panel.ui
 create mode 100644 panels/ubuntu/gnome-ubuntu-panel.desktop.in.in
 create mode 100644 panels/ubuntu/meson.build
 create mode 100644 panels/ubuntu/theme-dark.svg
 create mode 100644 panels/ubuntu/theme-light.svg
 create mode 100644 panels/ubuntu/theme-standard.svg
 create mode 100644 panels/ubuntu/ubuntu.gresource.xml

diff --git a/panels/meson.build b/panels/meson.build
index 2f4fdc5..81ae0b1 100644
--- a/panels/meson.build
+++ b/panels/meson.build
@@ -24,6 +24,7 @@ panels = [
   'search',
   'sharing',
   'sound',
+  'ubuntu',
   'universal-access',
   'usage',
   'user-accounts'
diff --git a/panels/ubuntu/cc-ubuntu-panel.c b/panels/ubuntu/cc-ubuntu-panel.c
new file mode 100644
index 0000000..9fa67dd
--- /dev/null
+++ b/panels/ubuntu/cc-ubuntu-panel.c
@@ -0,0 +1,571 @@
+/* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
+/*
+ * Copyright (C) 2017-2020 Canonical Ltd
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General
+ * Public License along with this library; if not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#include "config.h"
+
+#include <string.h>
+#include <glib/gi18n-lib.h>
+#include <glib.h>
+#include <gio/gio.h>
+#include <gio/gdesktopappinfo.h>
+
+#include "list-box-helper.h"
+#include "cc-ubuntu-panel.h"
+#include "cc-ubuntu-resources.h"
+#include "shell/cc-application.h"
+#include "shell/cc-object-storage.h"
+
+#include "panels/display/cc-display-config-manager-dbus.h"
+#include "panels/display/cc-display-config.h"
+
+#define MIN_ICONSIZE 16.0
+#define MAX_ICONSIZE 64.0
+#define DEFAULT_ICONSIZE 48.0
+#define ICONSIZE_KEY "dash-max-icon-size"
+
+#define UBUNTU_DOCK_SCHEMA "org.gnome.shell.extensions.dash-to-dock"
+#define UBUNTU_DOCK_ALL_MONITORS_KEY "multi-monitor"
+#define UBUNTU_DOCK_ON_MONITOR_KEY "preferred-monitor"
+
+#define INTERFACE_SCHEMA "org.gnome.desktop.interface"
+#define GTK_THEME_KEY "gtk-theme"
+#define CURSOR_THEME_KEY "cursor-theme"
+#define ICON_THEME_KEY "icon-theme"
+
+struct _CcUbuntuPanel {
+  CcPanel                 parent_instance;
+
+  GtkSwitch              *dock_autohide_switch;
+  GtkListBox             *dock_listbox;
+  GtkListBoxRow          *dock_monitor_row;
+  GtkComboBox            *dock_placement_combo;
+  GtkListStore           *dock_placement_liststore;
+  GtkComboBoxText        *dock_position_combo;
+  GtkAdjustment          *icon_size_adjustment;
+  GtkScale               *icon_size_scale;
+  GtkFlowBox             *theme_box;
+  GtkFlowBoxChild        *theme_dark;
+  GtkFlowBoxChild        *theme_light;
+  GtkFlowBoxChild        *theme_standard;
+
+  GSettings              *dock_settings;
+  GSettings              *interface_settings;
+  gint                    dock_placement_primary_index;
+  CcDisplayConfigManager *display_config_manager;
+  GDBusProxy             *shell_proxy;
+};
+
+CC_PANEL_REGISTER (CcUbuntuPanel, cc_ubuntu_panel);
+
+static void monitor_labeler_hide (CcUbuntuPanel *self);
+
+static void
+cc_ubuntu_panel_dispose (GObject *object)
+{
+  CcUbuntuPanel *self = CC_UBUNTU_PANEL (object);
+
+  monitor_labeler_hide (self);
+
+  g_clear_object (&self->dock_settings);
+  g_clear_object (&self->interface_settings);
+  g_clear_object (&self->display_config_manager);
+  g_clear_object (&self->shell_proxy);
+
+  G_OBJECT_CLASS (cc_ubuntu_panel_parent_class)->dispose (object);
+}
+
+static void
+monitor_labeler_hide (CcUbuntuPanel *self)
+{
+  if (!self->shell_proxy)
+    return;
+
+  g_dbus_proxy_call (self->shell_proxy,
+                     "HideMonitorLabels",
+                     NULL, G_DBUS_CALL_FLAGS_NONE,
+                     -1, NULL, NULL, NULL);
+}
+
+static void
+monitor_labeler_show (CcUbuntuPanel *self)
+{
+  g_autoptr(CcDisplayConfig) current_config = NULL;
+  GList *outputs, *l;
+  GVariantBuilder builder;
+  gint number = 0;
+  guint n_monitors = 0;
+
+  if (!self->shell_proxy || !self->display_config_manager)
+    return;
+
+  current_config = cc_display_config_manager_get_current (self->display_config_manager);
+
+  if (!current_config)
+    return;
+
+  outputs = cc_display_config_get_ui_sorted_monitors (current_config);
+  if (!outputs)
+    return;
+
+  if (cc_display_config_is_cloning (current_config))
+    return monitor_labeler_hide (self);
+
+  g_variant_builder_init (&builder, G_VARIANT_TYPE_TUPLE);
+  g_variant_builder_open (&builder, G_VARIANT_TYPE_ARRAY);
+
+  for (l = outputs; l != NULL; l = l->next)
+    {
+      CcDisplayMonitor *output = l->data;
+
+      if (!cc_display_monitor_is_active (output))
+        continue;
+
+      number = cc_display_monitor_get_ui_number (output);
+      if (number == 0)
+        continue;
+
+      g_variant_builder_add (&builder, "{sv}",
+                             cc_display_monitor_get_connector_name (output),
+                             g_variant_new_int32 (number));
+      n_monitors++;
+    }
+
+  g_variant_builder_close (&builder);
+
+  if (number < 2 || n_monitors < 2)
+    return monitor_labeler_hide (self);
+
+  g_dbus_proxy_call (self->shell_proxy,
+                     "ShowMonitorLabels",
+                     g_variant_builder_end (&builder),
+                     G_DBUS_CALL_FLAGS_NONE,
+                     -1, NULL, NULL, NULL);
+}
+
+static void
+ensure_monitor_labels (CcUbuntuPanel *self)
+{
+  g_autoptr(GList) windows = NULL;
+  GList *w;
+
+  windows = gtk_window_list_toplevels ();
+
+  for (w = windows; w; w = w->next)
+    {
+      if (gtk_window_has_toplevel_focus (GTK_WINDOW (w->data)))
+        {
+          monitor_labeler_show (self);
+          break;
+        }
+    }
+
+  if (!w)
+    monitor_labeler_hide (self);
+}
+
+static void
+shell_proxy_ready (GObject        *source,
+                   GAsyncResult   *res,
+                   CcUbuntuPanel *self)
+{
+  GDBusProxy *proxy;
+  g_autoptr(GError) error = NULL;
+
+  proxy = cc_object_storage_create_dbus_proxy_finish (res, &error);
+  if (!proxy)
+    {
+      if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED))
+        g_warning ("Failed to contact gnome-shell: %s", error->message);
+      return;
+    }
+
+  self->shell_proxy = proxy;
+
+  ensure_monitor_labels (self);
+}
+
+static void
+on_screen_changed (CcUbuntuPanel *self)
+{
+  g_autoptr(CcDisplayConfig) current = NULL;
+  GtkTreeIter ubuntu_dock_placement_iter;
+  gboolean ubuntu_dock_on_all_monitors;
+  gint ubuntu_dock_current_index;
+  GList *outputs, *l;
+  gint n_monitors;
+  gint index;
+  gboolean is_rtl;
+
+  if (self->display_config_manager == NULL)
+    return;
+
+  current = cc_display_config_manager_get_current (self->display_config_manager);
+  if (current == NULL)
+    return;
+
+  ubuntu_dock_on_all_monitors = g_settings_get_boolean (self->dock_settings, UBUNTU_DOCK_ALL_MONITORS_KEY);
+  ubuntu_dock_current_index = g_settings_get_int (self->dock_settings, UBUNTU_DOCK_ON_MONITOR_KEY);
+
+  gtk_list_store_clear (self->dock_placement_liststore);
+
+  outputs = cc_display_config_get_ui_sorted_monitors (current);
+  is_rtl = gtk_widget_get_state_flags (GTK_WIDGET (self->dock_placement_combo)) & GTK_STATE_FLAG_DIR_RTL;
+
+  for (l = outputs, n_monitors = 0; l != NULL; l = l->next)
+    {
+      CcDisplayMonitor *output = l->data;
+
+      if (cc_display_monitor_is_active (output))
+        n_monitors++;
+    }
+
+  for (l = outputs, index = 0; l != NULL && n_monitors > 0; l = l->next)
+    {
+      g_autofree char *monitor_label = NULL;
+      CcDisplayMonitor *output = l->data;
+
+      if (!cc_display_monitor_is_active (output))
+        continue;
+
+      const gchar *monitor_name = cc_display_monitor_get_display_name (output);
+      if (cc_display_monitor_is_primary (output))
+        {
+          if (!is_rtl)
+            monitor_label = g_strdup_printf ("%s (%s)", monitor_name, _("Primary Display"));
+          else
+            monitor_label = g_strdup_printf ("(%s) %s", _("Primary Display"), monitor_name);
+        }
+      else
+        {
+          monitor_label = g_strdup (monitor_name);
+        }
+
+      if (n_monitors > 1)
+        {
+          int monitor_number = cc_display_monitor_get_ui_number (output);
+          g_autofree char *old_label = g_steal_pointer (&monitor_label);
+
+          if (!is_rtl)
+            monitor_label = g_strdup_printf ("%d. %s", monitor_number,  old_label);
+          else
+            monitor_label = g_strdup_printf ("%s .%d", old_label, monitor_number);
+        }
+
+      gtk_list_store_append (self->dock_placement_liststore, &ubuntu_dock_placement_iter);
+      gtk_list_store_set (self->dock_placement_liststore, &ubuntu_dock_placement_iter, 0, monitor_label, -1);
+
+      if (cc_display_monitor_is_primary (output))
+        self->dock_placement_primary_index = index;
+
+      index++;
+    }
+
+  gtk_widget_set_visible (GTK_WIDGET (self->dock_monitor_row), n_monitors > 1);
+
+  gtk_list_store_prepend (self->dock_placement_liststore, &ubuntu_dock_placement_iter);
+  gtk_list_store_set (self->dock_placement_liststore, &ubuntu_dock_placement_iter, 0, _("All displays"), -1);
+
+  gint selection = 0;
+  if (ubuntu_dock_on_all_monitors != TRUE)
+    {
+      if ((ubuntu_dock_current_index != -1) && (ubuntu_dock_current_index < g_list_length (outputs)))
+        selection = ubuntu_dock_current_index + 1;
+      else
+        selection = self->dock_placement_primary_index + 1;
+    }
+  gtk_combo_box_set_active (self->dock_placement_combo, selection);
+
+  ensure_monitor_labels (self);
+}
+
+static void
+session_bus_ready (GObject        *source,
+                   GAsyncResult   *res,
+                   gpointer        user_data)
+{
+  CcUbuntuPanel *self = user_data;
+  GDBusConnection *bus;
+  g_autoptr(GError) error = NULL;
+
+  bus = g_bus_get_finish (res, &error);
+  if (!bus)
+    {
+      if (!g_error_matches (error, G_IO_ERROR, G_IO_ERROR_CANCELLED))
+        g_warning ("Failed to get session bus: %s", error->message);
+      return;
+    }
+
+  self->display_config_manager = cc_display_config_manager_dbus_new ();
+  g_signal_connect_object (self->display_config_manager, "changed",
+                           G_CALLBACK (on_screen_changed),
+                           self,
+                           G_CONNECT_SWAPPED);
+}
+
+static void
+on_theme_box_selected_children_changed (CcUbuntuPanel *self)
+{
+  const gchar *gtk_theme = NULL;
+  g_autoptr(GList) selected = NULL;
+
+  selected = gtk_flow_box_get_selected_children (self->theme_box);
+  if (selected != NULL)
+    {
+      GtkFlowBoxChild *selected_item = GTK_FLOW_BOX_CHILD (g_list_nth_data (selected, 0));
+      if (selected_item == self->theme_standard)
+        gtk_theme = "Yaru";
+      else if (selected_item == self->theme_light)
+        gtk_theme = "Yaru-light";
+      else if (selected_item == self->theme_dark)
+        gtk_theme = "Yaru-dark";
+    }
+
+  if (gtk_theme != NULL)
+    g_settings_set_string (self->interface_settings, GTK_THEME_KEY, gtk_theme);
+}
+
+static void
+on_interface_settings_changed (CcUbuntuPanel *self)
+{
+  g_autofree gchar *gtk_theme = NULL;
+  g_autofree gchar *cursor_theme = NULL;
+  g_autofree gchar *icon_theme = NULL;
+  GtkFlowBoxChild *theme_item = NULL;
+
+  gtk_theme = g_settings_get_string (self->interface_settings, GTK_THEME_KEY);
+  cursor_theme = g_settings_get_string (self->interface_settings, CURSOR_THEME_KEY);
+  icon_theme = g_settings_get_string (self->interface_settings, ICON_THEME_KEY);
+
+  if (g_str_equal (cursor_theme, "Yaru") && g_str_equal (icon_theme, "Yaru"))
+    {
+      if (g_strcmp0 (gtk_theme, "Yaru") == 0)
+        theme_item = self->theme_standard;
+      else if (g_strcmp0 (gtk_theme, "Yaru-light") == 0)
+        theme_item = self->theme_light;
+      else if (g_strcmp0 (gtk_theme, "Yaru-dark") == 0)
+        theme_item = self->theme_dark;
+    }
+
+  if (theme_item != NULL)
+    gtk_flow_box_select_child (self->theme_box, theme_item);
+  else
+    gtk_flow_box_unselect_all (self->theme_box);
+}
+
+static void
+icon_size_widget_refresh (CcUbuntuPanel *self)
+{
+  gint value = g_settings_get_int (self->dock_settings, ICONSIZE_KEY);
+  gtk_adjustment_set_value (self->icon_size_adjustment, (gdouble) value / 2);
+}
+
+static gchar *
+on_icon_size_format_value (CcUbuntuPanel *self, gdouble value)
+{
+  return g_strdup_printf ("%d", (int)value * 2);
+}
+
+static void
+on_icon_size_adjustment_value_changed (CcUbuntuPanel *self)
+{
+  gint value = (gint)gtk_adjustment_get_value (self->icon_size_adjustment) * 2;
+  if (g_settings_get_int (self->dock_settings, ICONSIZE_KEY) != value)
+    g_settings_set_int (self->dock_settings, ICONSIZE_KEY, value);
+}
+
+static void
+on_dock_placement_combo_changed (CcUbuntuPanel *self)
+{
+  gint active;
+  gboolean ubuntu_dock_on_all_monitors;
+  gint ubuntu_dock_current_index;
+
+  active = gtk_combo_box_get_active (self->dock_placement_combo);
+  if (active < 0)
+    return;
+
+  ubuntu_dock_on_all_monitors = g_settings_get_boolean (self->dock_settings, UBUNTU_DOCK_ALL_MONITORS_KEY);
+  ubuntu_dock_current_index = g_settings_get_int (self->dock_settings, UBUNTU_DOCK_ON_MONITOR_KEY);
+  if (active == 0)
+    {
+      if (!ubuntu_dock_on_all_monitors)
+        {
+          g_settings_set_boolean (self->dock_settings, UBUNTU_DOCK_ALL_MONITORS_KEY, TRUE);
+          g_settings_apply (self->dock_settings);
+        }
+    }
+  else
+    {
+      g_autoptr(GSettings) delayed_settings = g_settings_new (UBUNTU_DOCK_SCHEMA);
+      active--;
+      g_settings_delay (delayed_settings);
+      if (ubuntu_dock_on_all_monitors)
+        g_settings_set_boolean (delayed_settings, UBUNTU_DOCK_ALL_MONITORS_KEY, FALSE);
+      if (ubuntu_dock_current_index != active)
+        {
+          if (!(ubuntu_dock_current_index == -1 && (active == self->dock_placement_primary_index)))
+            g_settings_set_int (delayed_settings, UBUNTU_DOCK_ON_MONITOR_KEY, active);
+        }
+      g_settings_apply (delayed_settings);
+    }
+}
+
+static void
+ext_ubuntu_dock_placement_changed_callback (CcUbuntuPanel *self)
+{
+  int selection = 0;
+
+  if (g_settings_get_boolean (self->dock_settings, UBUNTU_DOCK_ALL_MONITORS_KEY) == FALSE)
+    {
+      selection = g_settings_get_int (self->dock_settings, UBUNTU_DOCK_ON_MONITOR_KEY);
+      if (selection == -1)
+        selection = self->dock_placement_primary_index;
+      selection++; // offset in combox
+    }
+
+  gtk_combo_box_set_active (GTK_COMBO_BOX (self->dock_placement_combo), selection);
+}
+
+static void
+cc_ubuntu_panel_class_init (CcUbuntuPanelClass *klass)
+{
+  GObjectClass *object_class = G_OBJECT_CLASS (klass);
+  GtkWidgetClass *widget_class = GTK_WIDGET_CLASS (klass);
+
+  object_class->dispose = cc_ubuntu_panel_dispose;
+
+  gtk_widget_class_set_template_from_resource (widget_class, "/org/gnome/control-center/ubuntu/cc-ubuntu-panel.ui");
+
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, dock_autohide_switch);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, dock_listbox);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, dock_monitor_row);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, dock_placement_combo);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, dock_placement_liststore);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, dock_position_combo);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, icon_size_adjustment);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, icon_size_scale);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, theme_box);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, theme_dark);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, theme_light);
+  gtk_widget_class_bind_template_child (widget_class, CcUbuntuPanel, theme_standard);
+
+  gtk_widget_class_bind_template_callback (widget_class, on_dock_placement_combo_changed);
+  gtk_widget_class_bind_template_callback (widget_class, on_icon_size_adjustment_value_changed);
+  gtk_widget_class_bind_template_callback (widget_class, on_icon_size_format_value);
+  gtk_widget_class_bind_template_callback (widget_class, on_theme_box_selected_children_changed);
+}
+
+static void
+mapped_cb (CcUbuntuPanel *self)
+{
+  CcShell *shell;
+  GtkWidget *toplevel;
+
+  shell = cc_panel_get_shell (CC_PANEL (self));
+  toplevel = cc_shell_get_toplevel (shell);
+
+  g_signal_handlers_disconnect_by_func (toplevel, mapped_cb, self);
+  g_signal_connect_object (toplevel, "notify::has-toplevel-focus",
+                           G_CALLBACK (ensure_monitor_labels), self,
+                           G_CONNECT_SWAPPED);
+}
+
+static void
+cc_ubuntu_panel_init (CcUbuntuPanel *self)
+{
+  g_autoptr(GSettingsSchema) schema = NULL;
+
+  g_resources_register (cc_ubuntu_get_resource ());
+
+  gtk_widget_init_template (GTK_WIDGET (self));
+
+  gtk_list_box_set_header_func (self->dock_listbox, cc_list_box_update_header_func, NULL, NULL);
+
+  self->interface_settings = g_settings_new (INTERFACE_SCHEMA);
+  g_signal_connect_object (self->interface_settings, "changed::" GTK_THEME_KEY,
+                           G_CALLBACK (on_interface_settings_changed), self, G_CONNECT_SWAPPED);
+  g_signal_connect_object (self->interface_settings, "changed::" CURSOR_THEME_KEY,
+                           G_CALLBACK (on_interface_settings_changed), self, G_CONNECT_SWAPPED);
+  g_signal_connect_object (self->interface_settings, "changed::" ICON_THEME_KEY,
+                           G_CALLBACK (on_interface_settings_changed), self, G_CONNECT_SWAPPED);
+
+  /* Only load if we have ubuntu dock or dash to dock installed */
+  schema = g_settings_schema_source_lookup (g_settings_schema_source_get_default (), UBUNTU_DOCK_SCHEMA, TRUE);
+  if (!schema)
+    {
+      g_warning ("No Ubuntu Dock is installed here. Panel disabled. Please fix your installation.");
+      return;
+    }
+  self->dock_settings = g_settings_new_full (schema, NULL, NULL);
+  g_signal_connect_object (self->dock_settings, "changed::" ICONSIZE_KEY,
+                           G_CALLBACK (icon_size_widget_refresh), self, G_CONNECT_SWAPPED);
+  g_signal_connect_object (self->dock_settings, "changed::" UBUNTU_DOCK_ALL_MONITORS_KEY,
+                           G_CALLBACK (ext_ubuntu_dock_placement_changed_callback), self, G_CONNECT_SWAPPED);
+  g_signal_connect_object (self->dock_settings, "changed::" UBUNTU_DOCK_ON_MONITOR_KEY,
+                           G_CALLBACK (ext_ubuntu_dock_placement_changed_callback), self, G_CONNECT_SWAPPED);
+  g_settings_bind (self->dock_settings, "dock-position",
+                   self->dock_position_combo, "active-id",
+                   G_SETTINGS_BIND_DEFAULT);
+  g_settings_bind (self->dock_settings, "dock-fixed",
+                   self->dock_autohide_switch, "active",
+                   G_SETTINGS_BIND_INVERT_BOOLEAN);
+
+  /* Icon size change - we halve the sizes so we can only get even values */
+  gtk_adjustment_set_value (self->icon_size_adjustment, DEFAULT_ICONSIZE / 2);
+  gtk_adjustment_set_lower (self->icon_size_adjustment, MIN_ICONSIZE / 2);
+  gtk_adjustment_set_upper (self->icon_size_adjustment, MAX_ICONSIZE / 2);
+  gtk_scale_add_mark (self->icon_size_scale, DEFAULT_ICONSIZE / 2, GTK_POS_BOTTOM, NULL);
+
+  icon_size_widget_refresh (self);
+  on_interface_settings_changed (self);
+
+  cc_object_storage_create_dbus_proxy (G_BUS_TYPE_SESSION,
+                                       G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES |
+                                       G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS |
+                                       G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START,
+                                       "org.gnome.Shell",
+                                       "/org/gnome/Shell",
+                                       "org.gnome.Shell",
+                                       cc_panel_get_cancellable (CC_PANEL (self)),
+                                       (GAsyncReadyCallback) shell_proxy_ready,
+                                       self);
+
+  g_signal_connect (self, "map", G_CALLBACK (mapped_cb), NULL);
+
+  g_bus_get (G_BUS_TYPE_SESSION, NULL, session_bus_ready, self);
+}
+
+void
+cc_ubuntu_panel_static_init_func (void)
+{
+  CcApplication *application;
+  const gchar *desktop_list;
+  g_auto(GStrv) desktops = NULL;
+
+  desktop_list = g_getenv ("XDG_CURRENT_DESKTOP");
+  if (desktop_list != NULL)
+    desktops = g_strsplit (desktop_list, ":", -1);
+
+  if (desktops == NULL || !g_strv_contains ((const gchar * const *) desktops, "ubuntu")) {
+    application = CC_APPLICATION (g_application_get_default ());
+    cc_shell_model_set_panel_visibility (cc_application_get_model (application),
+                                         "ubuntu",
+                                         CC_PANEL_HIDDEN);
+  }
+}
diff --git a/panels/ubuntu/cc-ubuntu-panel.h b/panels/ubuntu/cc-ubuntu-panel.h
new file mode 100644
index 0000000..b13f611
--- /dev/null
+++ b/panels/ubuntu/cc-ubuntu-panel.h
@@ -0,0 +1,35 @@
+/* -*- mode: C; c-file-style: "gnu"; indent-tabs-mode: nil; -*- */
+/*
+ * Copyright (C) 2017 Canonical Ltd
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General
+ * Public License along with this library; if not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#ifndef _CC_UBUNTU_PANEL_H_
+#define _CC_UBUNTU_PANEL_H_
+
+#include <gio/gio.h>
+#include <shell/cc-panel.h>
+
+G_BEGIN_DECLS
+
+#define CC_TYPE_UBUNTU_PANEL (cc_ubuntu_panel_get_type ())
+G_DECLARE_FINAL_TYPE (CcUbuntuPanel, cc_ubuntu_panel, CC, UBUNTU_PANEL, CcPanel)
+
+void cc_ubuntu_panel_static_init_func (void);
+
+G_END_DECLS
+
+#endif /* _CC_EDIT_DIALOG_H_ */
diff --git a/panels/ubuntu/cc-ubuntu-panel.ui b/panels/ubuntu/cc-ubuntu-panel.ui
new file mode 100644
index 0000000..fcea7d6
--- /dev/null
+++ b/panels/ubuntu/cc-ubuntu-panel.ui
@@ -0,0 +1,392 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!-- Generated with glade 3.20.0 -->
+<interface>
+  <requires lib="gtk+" version="3.20"/>
+  <template class="CcUbuntuPanel" parent="CcPanel">
+    <property name="visible">True</property>
+    <child>
+      <object class="GtkScrolledWindow">
+        <property name="visible">True</property>
+        <property name="can_focus">True</property>
+        <property name="hscrollbar_policy">never</property>
+        <property name="shadow_type">in</property>
+        <child>
+          <object class="GtkViewport">
+            <property name="visible">True</property>
+            <property name="can_focus">False</property>
+            <child>
+              <object class="GtkBox">
+                <property name="visible">True</property>
+                <property name="can_focus">False</property>
+
+                <!-- Stub boxes to make the content cover 1/3 of the screen -->
+                <child>
+                  <object class="GtkBox">
+                    <property name="visible">True</property>
+                    <property name="can_focus">False</property>
+                    <property name="hexpand">True</property>
+                  </object>
+                </child>
+
+                <child>
+                  <object class="GtkBox">
+                    <property name="visible">True</property>
+                    <property name="can_focus">False</property>
+                    <property name="hexpand">True</property>
+                  </object>
+                  <packing>
+                    <property name="pack_type">end</property>
+                  </packing>
+                </child>
+
+                <!-- Content -->
+                <child>
+                  <object class="GtkBox">
+                    <property name="visible">True</property>
+                    <property name="can_focus">False</property>
+                    <property name="margin">32</property>
+                    <property name="orientation">vertical</property>
+                    <property name="hexpand">True</property>
+                    <child>
+                      <object class="GtkLabel">
+                        <property name="visible">True</property>
+                        <property name="can_focus">False</property>
+                        <property name="xalign">0</property>
+                        <property name="margin_bottom">12</property>
+                        <property name="label" translatable="yes" comments="Theme settings.">Window colors</property>
+                        <attributes>
+                          <attribute name="weight" value="bold"/>
+                        </attributes>
+                      </object>
+                    </child>
+                    <child>
+                      <object class="GtkFrame">
+                        <property name="visible">True</property>
+                        <property name="can_focus">False</property>
+                        <property name="margin_bottom">32</property>
+                        <property name="hexpand">True</property>
+                        <property name="label_xalign">0</property>
+                        <property name="shadow_type">in</property>
+                        <child>
+                          <object class="GtkFlowBox" id="theme_box">
+                            <property name="visible">True</property>
+                            <property name="homogeneous">True</property>
+                            <property name="max-children-per-line">3</property>
+                            <signal name="selected-children-changed" handler="on_theme_box_selected_children_changed" object="CcUbuntuPanel" swapped="yes"/>
+                            <child>
+                              <object class="GtkFlowBoxChild" id="theme_light">
+                                <property name="visible">True</property>
+                                <child>
+                                  <object class="GtkBox">
+                                    <property name="visible">True</property>
+                                    <property name="orientation">vertical</property>
+                                    <property name="spacing">6</property>
+                                    <property name="margin">10</property>
+                                    <child>
+                                      <object class="GtkImage">
+                                        <property name="visible">True</property>
+                                        <property name="resource">/org/gnome/control-center/ubuntu/theme-light.svg</property>
+                                      </object>
+                                    </child>
+                                    <child>
+                                      <object class="GtkLabel">
+                                        <property name="visible">True</property>
+                                        <property name="label" translatable="yes" context="Yaru theme in use">Light</property>
+                                      </object>
+                                    </child>
+                                  </object>
+                                </child>
+                              </object>
+                            </child>
+                            <child>
+                              <object class="GtkFlowBoxChild" id="theme_standard">
+                                <property name="visible">True</property>
+                                <child>
+                                  <object class="GtkBox">
+                                    <property name="visible">True</property>
+                                    <property name="orientation">vertical</property>
+                                    <property name="spacing">6</property>
+                                    <property name="margin">10</property>
+                                    <child>
+                                      <object class="GtkImage">
+                                        <property name="visible">True</property>
+                                        <property name="resource">/org/gnome/control-center/ubuntu/theme-standard.svg</property>
+                                      </object>
+                                    </child>
+                                    <child>
+                                      <object class="GtkLabel">
+                                        <property name="visible">True</property>
+                                        <property name="label" translatable="yes" context="Yaru theme in use">Standard</property>
+                                      </object>
+                                    </child>
+                                  </object>
+                                </child>
+                              </object>
+                            </child>
+                            <child>
+                              <object class="GtkFlowBoxChild" id="theme_dark">
+                                <property name="visible">True</property>
+                                <child>
+                                  <object class="GtkBox">
+                                    <property name="visible">True</property>
+                                    <property name="orientation">vertical</property>
+                                    <property name="spacing">6</property>
+                                    <property name="margin">10</property>
+                                    <child>
+                                      <object class="GtkImage">
+                                        <property name="visible">True</property>
+                                        <property name="resource">/org/gnome/control-center/ubuntu/theme-dark.svg</property>
+                                      </object>
+                                    </child>
+                                    <child>
+                                      <object class="GtkLabel">
+                                        <property name="visible">True</property>
+                                        <property name="label" translatable="yes" context="Yaru theme in use">Dark</property>
+                                      </object>
+                                    </child>
+                                  </object>
+                                </child>
+                              </object>
+                            </child>
+                          </object>
+                        </child>
+                      </object>
+                    </child>
+                    <child>
+                      <object class="GtkLabel">
+                        <property name="visible">True</property>
+                        <property name="can_focus">False</property>
+                        <property name="xalign">0</property>
+                        <property name="margin_bottom">12</property>
+                        <property name="label" translatable="yes" comments="Dock settings.">Dock</property>
+                        <attributes>
+                          <attribute name="weight" value="bold"/>
+                        </attributes>
+                      </object>
+                    </child>
+                    <child>
+                      <object class="GtkFrame">
+                        <property name="visible">True</property>
+                        <property name="can_focus">False</property>
+                        <property name="margin_bottom">32</property>
+                        <property name="hexpand">True</property>
+                        <property name="label_xalign">0</property>
+                        <property name="shadow_type">in</property>
+                        <child>
+                          <object class="GtkListBox" id="dock_listbox">
+                            <property name="visible">True</property>
+                            <property name="can_focus">False</property>
+                            <property name="hexpand">True</property>
+                            <property name="selection_mode">none</property>
+                            <property name="activate_on_single_click">False</property>
+                            <child>
+                              <object class="GtkListBoxRow">
+                                <property name="visible">True</property>
+                                <child>
+                                  <object class="GtkGrid">
+                                    <property name="visible">True</property>
+                                    <property name="margin_start">20</property>
+                                    <property name="margin_end">20</property>
+                                    <property name="margin_top">10</property>
+                                    <property name="margin_bottom">10</property>
+                                    <property name="row_spacing">2</property>
+                                    <property name="column_spacing">16</property>
+                                    <property name="valign">center</property>
+                                    <child>
+                                      <object class="GtkLabel">
+                                        <property name="visible">True</property>
+                                        <property name="label" translatable="yes">Auto-hide the Dock</property>
+                                        <property name="hexpand">True</property>
+                                        <property name="halign">start</property>
+                                        <property name="mnemonic_widget">dock_autohide_switch</property>
+                                      </object>
+                                      <packing>
+                                        <property name="left_attach">0</property>
+                                        <property name="top_attach">0</property>
+                                        <property name="width">1</property>
+                                        <property name="height">1</property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <object class="GtkLabel">
+                                        <property name="visible">True</property>
+                                        <property name="label" translatable="yes">The dock hides when any windows overlap with it.</property>
+                                        <property name="halign">start</property>
+                                        <attributes>
+                                          <attribute name="scale" value="0.9"/>
+                                        </attributes>
+                                        <style>
+                                          <class name="dim-label"/>
+                                        </style>
+                                      </object>
+                                      <packing>
+                                        <property name="left_attach">0</property>
+                                        <property name="top_attach">1</property>
+                                        <property name="width">1</property>
+                                        <property name="height">1</property>
+                                      </packing>
+                                    </child>
+                                    <child>
+                                      <object class="GtkSwitch" id="dock_autohide_switch">
+                                        <property name="visible">True</property>
+                                        <property name="halign">end</property>
+                                        <property name="valign">center</property>
+                                      </object>
+                                      <packing>
+                                        <property name="left_attach">1</property>
+                                        <property name="top_attach">0</property>
+                                        <property name="width">1</property>
+                                        <property name="height">2</property>
+                                      </packing>
+                                    </child>
+                                  </object>
+                                </child>
+                              </object>
+                            </child>
+                            <child>
+                              <object class="GtkListBoxRow">
+                                <property name="visible">True</property>
+                                <child>
+                                  <object class="GtkBox">
+                                    <property name="visible">True</property>
+                                    <property name="orientation">horizontal</property>
+                                    <property name="spacing">50</property>
+                                    <child>
+                                      <object class="GtkLabel">
+                                        <property name="visible">True</property>
+                                        <property name="label" translatable="yes">Icon size</property>
+                                        <property name="hexpand">True</property>
+                                        <property name="halign">start</property>
+                                        <property name="margin_start">20</property>
+                                        <property name="margin_end">20</property>
+                                        <property name="margin_top">16</property>
+                                        <property name="margin_bottom">16</property>
+                                        <property name="mnemonic_widget">icon_size_scale</property>
+                                      </object>
+                                    </child>
+                                    <child>
+                                      <object class="GtkScale" id="icon_size_scale">
+                                        <property name="visible">True</property>
+                                        <property name="adjustment">icon_size_adjustment</property>
+                                        <property name="orientation">horizontal</property>
+                                        <property name="value_pos">left</property>
+                                        <property name="width_request">264</property>
+                                        <property name="valign">center</property>
+                                        <property name="margin_start">20</property>
+                                        <property name="margin_end">20</property>
+                                        <signal name="format-value" handler="on_icon_size_format_value" object="CcUbuntuPanel" swapped="yes"/>
+                                      </object>
+                                    </child>
+                                  </object>
+                                </child>
+                              </object>
+                            </child>
+                            <child>
+                              <object class="GtkListBoxRow" id="dock_monitor_row">
+                                <property name="visible">True</property>
+                                <child>
+                                  <object class="GtkBox">
+                                    <property name="visible">True</property>
+                                    <property name="orientation">horizontal</property>
+                                    <property name="spacing">50</property>
+                                    <child>
+                                      <object class="GtkLabel">
+                                        <property name="visible">True</property>
+                                        <property name="label" translatable="yes">Show on</property>
+                                        <property name="hexpand">True</property>
+                                        <property name="halign">start</property>
+                                        <property name="margin_start">20</property>
+                                        <property name="margin_end">20</property>
+                                        <property name="margin_top">16</property>
+                                        <property name="margin_bottom">16</property>
+                                        <property name="mnemonic_widget">dock_placement_combo</property>
+                                      </object>
+                                    </child>
+                                    <child>
+                                      <object class="GtkComboBox" id="dock_placement_combo">
+                                        <property name="visible">True</property>
+                                        <property name="model">dock_placement_liststore</property>
+                                        <property name="margin_start">20</property>
+                                        <property name="margin_end">20</property>
+                                        <property name="valign">center</property>
+                                        <signal name="changed" handler="on_dock_placement_combo_changed" object="CcUbuntuPanel" swapped="yes"/>
+                                        <child>
+                                          <object class="GtkCellRendererText"/>
+                                          <attributes>
+                                            <attribute name="text">0</attribute>
+                                          </attributes>
+                                        </child>
+                                      </object>
+                                    </child>
+                                  </object>
+                                </child>
+                              </object>
+                            </child>
+                            <child>
+                              <object class="GtkListBoxRow">
+                                <property name="visible">True</property>
+                                <child>
+                                  <object class="GtkBox">
+                                    <property name="visible">True</property>
+                                    <property name="orientation">horizontal</property>
+                                    <property name="spacing">50</property>
+                                    <child>
+                                      <object class="GtkLabel">
+                                        <property name="visible">True</property>
+                                        <property name="label" translatable="yes">Position on screen</property>
+                                        <property name="hexpand">True</property>
+                                        <property name="halign">start</property>
+                                        <property name="margin_start">20</property>
+                                        <property name="margin_end">20</property>
+                                        <property name="margin_top">16</property>
+                                        <property name="margin_bottom">16</property>
+                                        <property name="mnemonic_widget">dock_position_combo</property>
+                                      </object>
+                                    </child>
+                                    <child>
+                                      <object class="GtkComboBoxText" id="dock_position_combo">
+                                        <property name="visible">True</property>
+                                        <property name="margin_start">20</property>
+                                        <property name="margin_end">20</property>
+                                        <property name="valign">center</property>
+                                        <items>
+                                          <item id="LEFT" translatable="yes" context="Position on screen for the Ubuntu dock">Left</item>
+                                          <item id="BOTTOM" translatable="yes" context="Position on screen for the Ubuntu dock">Bottom</item>
+                                          <item id="RIGHT" translatable="yes" context="Position on screen for the Ubuntu dock">Right</item>
+                                        </items>
+                                      </object>
+                                    </child>
+                                  </object>
+                                </child>
+                              </object>
+                            </child>
+                          </object>
+                        </child>
+                      </object>
+                    </child>
+                  </object>
+                  <packing>
+                    <property name="expand">False</property>
+                    <property name="fill">True</property>
+                    <property name="position">2</property>
+                  </packing>
+                </child>
+              </object>
+            </child>
+          </object>
+        </child>
+      </object>
+    </child>
+  </template>
+  <object class="GtkAdjustment" id="icon_size_adjustment">
+    <property name="step_increment">1</property>
+    <property name="page_increment">4</property>
+    <signal name="value-changed" handler="on_icon_size_adjustment_value_changed" object="CcUbuntuPanel" swapped="yes"/>
+  </object>
+  <object class="GtkListStore" id="dock_placement_liststore">
+    <columns>
+      <!-- column-name label -->
+      <column type="gchararray"/>
+    </columns>
+  </object>
+</interface>
diff --git a/panels/ubuntu/gnome-ubuntu-panel.desktop.in.in b/panels/ubuntu/gnome-ubuntu-panel.desktop.in.in
new file mode 100644
index 0000000..78571f1
--- /dev/null
+++ b/panels/ubuntu/gnome-ubuntu-panel.desktop.in.in
@@ -0,0 +1,16 @@
+[Desktop Entry]
+Name=Appearance
+Comment=Appearance Settings
+Exec=gnome-control-center ubuntu
+Icon=preferences-ubuntu-panel
+Terminal=false
+Type=Application
+NoDisplay=true
+StartupNotify=true
+Categories=GNOME;GTK;Settings;DesktopSettings;X-GNOME-Settings-Panel;X-GNOME-PersonalSettings;X-GNOME-PersonalizationSettings;
+OnlyShowIn=ubuntu;
+X-GNOME-Bugzilla-Bugzilla=GNOME
+X-GNOME-Bugzilla-Product=gnome-control-center
+X-GNOME-Bugzilla-Version=@VERSION@
+# Translators: those are keywords for the ubuntu control-center panel
+Keywords=Dock;Launcher;Theme;
diff --git a/panels/ubuntu/meson.build b/panels/ubuntu/meson.build
new file mode 100644
index 0000000..b57e85b
--- /dev/null
+++ b/panels/ubuntu/meson.build
@@ -0,0 +1,43 @@
+panels_list += cappletname
+desktop = 'gnome-@0@-panel.desktop'.format(cappletname)
+
+desktop_in = configure_file(
+  input: desktop + '.in.in',
+  output: desktop + '.in',
+  configuration: desktop_conf
+)
+
+i18n.merge_file(
+  desktop,
+  type: 'desktop',
+  input: desktop_in,
+  output: desktop,
+  po_dir: po_dir,
+  install: true,
+  install_dir: control_center_desktopdir
+)
+
+sources = files('cc-ubuntu-panel.c')
+
+resource_data = files('cc-ubuntu-panel.ui',
+                      'theme-dark.svg',
+                      'theme-light.svg',
+                      'theme-standard.svg')
+
+sources += gnome.compile_resources(
+  'cc-' + cappletname + '-resources',
+  cappletname + '.gresource.xml',
+  c_name: 'cc_' + cappletname,
+  dependencies: resource_data,
+  export: true
+)
+
+cflags += '-DGNOMELOCALEDIR="@0@"'.format(control_center_localedir)
+
+panels_libs += static_library(
+  cappletname,
+  sources: sources,
+  include_directories: [top_inc, common_inc],
+  dependencies: common_deps,
+  c_args: cflags
+)
diff --git a/panels/ubuntu/theme-dark.svg b/panels/ubuntu/theme-dark.svg
new file mode 100644
index 0000000..545154e
--- /dev/null
+++ b/panels/ubuntu/theme-dark.svg
@@ -0,0 +1,174 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   version="1.1"
+   width="100%"
+   height="100%"
+   viewBox="0 0 130 90"
+   id="svg3136">
+  <title
+     id="title3147">Artboard 1</title>
+  <metadata
+     id="metadata3187">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title>Artboard 1</dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <defs
+     id="defs3138">
+    <style
+       id="style3140" />
+    <linearGradient
+       x1="65"
+       y1="90"
+       x2="65"
+       id="linear-gradient"
+       gradientUnits="userSpaceOnUse">
+      <stop
+         id="stop3143"
+         style="stop-color:#7a0839;stop-opacity:1"
+         offset="0" />
+      <stop
+         id="stop3145"
+         style="stop-color:#510045;stop-opacity:1"
+         offset="1" />
+    </linearGradient>
+  </defs>
+  <g
+     id="Shell">
+    <g
+       id="Wallpaper">
+      <rect
+         width="130"
+         height="90"
+         x="0"
+         y="0"
+         id="rect3151"
+         style="fill:url(#linear-gradient)" />
+    </g>
+    <g
+       id="Shell-2">
+      <rect
+         width="130"
+         height="13"
+         x="0"
+         y="0"
+         id="rect3154"
+         style="opacity:0.5" />
+      <rect
+         width="25"
+         height="77"
+         x="0"
+         y="13"
+         id="rect3156"
+         style="opacity:0.4" />
+      <g
+         id="g3158"
+         style="opacity:0.3">
+        <rect
+           width="14.44"
+           height="14.44"
+           rx="3"
+           x="5.2800002"
+           y="17.99"
+           id="rect3160"
+           style="fill:#ffffff" />
+        <rect
+           width="14.44"
+           height="14.44"
+           rx="3"
+           x="5.2800002"
+           y="37.75"
+           id="rect3162"
+           style="fill:#ffffff" />
+        <rect
+           width="14.44"
+           height="14.44"
+           rx="3"
+           x="5.2800002"
+           y="57.509998"
+           id="rect3164"
+           style="fill:#ffffff" />
+      </g>
+    </g>
+  </g>
+  <g
+     id="Dark_Theme">
+    <rect
+       width="93.059998"
+       height="21.91"
+       x="37"
+       y="23.940001"
+       id="rect3167"
+       style="fill:#2b2929" />
+    <rect
+       width="63"
+       height="44.150002"
+       x="37"
+       y="45.849998"
+       id="rect3169"
+       style="fill:#353535" />
+    <rect
+       width="63"
+       height="11.94"
+       x="37"
+       y="62"
+       id="rect3171"
+       style="fill:#e95420" />
+    <rect
+       width="1.17"
+       height="44.150002"
+       x="100"
+       y="45.849998"
+       transform="matrix(-1,0,0,-1,201.16,135.85)"
+       id="rect3173"
+       style="fill:#2b2929" />
+    <rect
+       width="28.76"
+       height="44.150002"
+       x="101.17"
+       y="45.849998"
+       id="rect3175"
+       style="fill:#3d3d3d" />
+    <rect
+       width="46.880001"
+       height="11.99"
+       x="71.150002"
+       y="28.92"
+       id="rect3177"
+       style="fill:#3d3d3d" />
+    <rect
+       width="35.189999"
+       height="1.0599999"
+       x="76.980003"
+       y="39.849998"
+       id="rect3179"
+       style="fill:#e95420" />
+    <rect
+       width="12"
+       height="11.99"
+       x="41.150002"
+       y="28.92"
+       id="rect3288"
+       style="fill:#3d3d3d;fill-opacity:1" />
+    <rect
+       width="12"
+       height="11.99"
+       x="56.149998"
+       y="28.92"
+       id="rect3290"
+       style="fill:#3d3d3d;fill-opacity:1" />
+  </g>
+</svg>
diff --git a/panels/ubuntu/theme-light.svg b/panels/ubuntu/theme-light.svg
new file mode 100644
index 0000000..1bd8929
--- /dev/null
+++ b/panels/ubuntu/theme-light.svg
@@ -0,0 +1,171 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   version="1.1"
+   width="100%"
+   height="100%"
+   viewBox="0 0 130 90"
+   id="svg3030">
+  <title
+     id="title3041">Artboard 1</title>
+  <metadata
+     id="metadata3081">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title>Artboard 1</dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <defs
+     id="defs3032">
+    <style
+       id="style3034" />
+    <linearGradient
+       x1="65"
+       y1="90"
+       x2="65"
+       id="linear-gradient"
+       gradientUnits="userSpaceOnUse">
+      <stop
+         id="stop3037"
+         style="stop-color:#7a0839;stop-opacity:1"
+         offset="0" />
+      <stop
+         id="stop3039"
+         style="stop-color:#510045;stop-opacity:1"
+         offset="1" />
+    </linearGradient>
+  </defs>
+  <g
+     id="Shell">
+    <g
+       id="Wallpaper">
+      <rect
+         width="130"
+         height="90"
+         x="0"
+         y="0"
+         id="rect3045"
+         style="fill:url(#linear-gradient)" />
+    </g>
+    <g
+       id="Shell-2">
+      <rect
+         width="130"
+         height="13"
+         x="0"
+         y="0"
+         id="rect3048"
+         style="opacity:0.5" />
+      <rect
+         width="25"
+         height="77"
+         x="0"
+         y="13"
+         id="rect3050"
+         style="opacity:0.4" />
+      <g
+         id="g3052"
+         style="opacity:0.3">
+        <rect
+           width="14.44"
+           height="14.44"
+           rx="3"
+           x="5.2800002"
+           y="17.99"
+           id="rect3054"
+           style="fill:#ffffff" />
+        <rect
+           width="14.44"
+           height="14.44"
+           rx="3"
+           x="5.2800002"
+           y="37.75"
+           id="rect3056"
+           style="fill:#ffffff" />
+        <rect
+           width="14.44"
+           height="14.44"
+           rx="3"
+           x="5.2800002"
+           y="57.509998"
+           id="rect3058"
+           style="fill:#ffffff" />
+      </g>
+    </g>
+  </g>
+  <rect
+     width="93.059998"
+     height="21.91"
+     x="37"
+     y="23.940001"
+     id="rect3061"
+     style="fill:#e5e9ec" />
+  <rect
+     width="63"
+     height="44.150002"
+     x="37"
+     y="45.849998"
+     id="rect3063"
+     style="fill:#f8f9fa" />
+  <rect
+     width="63"
+     height="11.94"
+     x="37"
+     y="62"
+     id="rect3065"
+     style="fill:#e95420" />
+  <rect
+     width="1.17"
+     height="44.150002"
+     x="-101.16"
+     y="-90"
+     transform="scale(-1,-1)"
+     id="rect3067"
+     style="fill:#e3e3e3" />
+  <rect
+     width="28.76"
+     height="44.150002"
+     x="101.17"
+     y="45.849998"
+     id="rect3069"
+     style="fill:#ffffff" />
+  <rect
+     width="46.880001"
+     height="11.99"
+     x="71.150002"
+     y="28.92"
+     id="rect3071"
+     style="fill:#c8c9ca" />
+  <rect
+     width="35.189999"
+     height="1.0599999"
+     x="76.980003"
+     y="39.849998"
+     id="rect3073"
+     style="fill:#e95420" />
+  <rect
+     width="12"
+     height="11.99"
+     x="41.150002"
+     y="28.92"
+     id="rect3288"
+     style="fill:#c8c9ca;fill-opacity:1" />
+  <rect
+     width="12"
+     height="11.99"
+     x="56.150002"
+     y="28.92"
+     id="rect3290"
+     style="fill:#c8c9ca;fill-opacity:1" />
+</svg>
diff --git a/panels/ubuntu/theme-standard.svg b/panels/ubuntu/theme-standard.svg
new file mode 100644
index 0000000..862fd44
--- /dev/null
+++ b/panels/ubuntu/theme-standard.svg
@@ -0,0 +1,171 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   version="1.1"
+   width="100%"
+   height="100%"
+   viewBox="0 0 130 90"
+   id="svg2">
+  <title
+     id="title13">Artboard 1</title>
+  <metadata
+     id="metadata53">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title>Artboard 1</dc:title>
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <defs
+     id="defs4">
+    <style
+       id="style6" />
+    <linearGradient
+       x1="65"
+       y1="90"
+       x2="65"
+       id="linear-gradient"
+       gradientUnits="userSpaceOnUse">
+      <stop
+         id="stop9"
+         style="stop-color:#7a0839;stop-opacity:1"
+         offset="0" />
+      <stop
+         id="stop11"
+         style="stop-color:#510045;stop-opacity:1"
+         offset="1" />
+    </linearGradient>
+  </defs>
+  <g
+     id="Shell">
+    <g
+       id="Wallpaper">
+      <rect
+         width="130"
+         height="90"
+         x="0"
+         y="0"
+         id="rect17"
+         style="fill:url(#linear-gradient)" />
+    </g>
+    <g
+       id="Shell-2">
+      <rect
+         width="130"
+         height="13"
+         x="0"
+         y="0"
+         id="rect20"
+         style="opacity:0.5" />
+      <rect
+         width="25"
+         height="77"
+         x="0"
+         y="13"
+         id="rect22"
+         style="opacity:0.4" />
+      <g
+         id="g24"
+         style="opacity:0.3">
+        <rect
+           width="14.44"
+           height="14.44"
+           rx="3"
+           x="5.2800002"
+           y="17.99"
+           id="rect26"
+           style="fill:#ffffff" />
+        <rect
+           width="14.44"
+           height="14.44"
+           rx="3"
+           x="5.2800002"
+           y="37.75"
+           id="rect28"
+           style="fill:#ffffff" />
+        <rect
+           width="14.44"
+           height="14.44"
+           rx="3"
+           x="5.2800002"
+           y="57.509998"
+           id="rect30"
+           style="fill:#ffffff" />
+      </g>
+    </g>
+  </g>
+  <rect
+     width="93.059998"
+     height="21.91"
+     x="37"
+     y="23.940001"
+     id="rect33"
+     style="fill:#2b2929" />
+  <rect
+     width="63"
+     height="44.150002"
+     x="37"
+     y="45.849998"
+     id="rect35"
+     style="fill:#f8f9fa" />
+  <rect
+     width="63"
+     height="11.94"
+     x="37"
+     y="62"
+     id="rect37"
+     style="fill:#e95420" />
+  <rect
+     width="1.17"
+     height="44.150002"
+     x="-101.16"
+     y="-90"
+     transform="scale(-1,-1)"
+     id="rect39"
+     style="fill:#e3e3e3" />
+  <rect
+     width="28.76"
+     height="44.150002"
+     x="101.17"
+     y="45.849998"
+     id="rect41"
+     style="fill:#ffffff" />
+  <rect
+     width="46.880001"
+     height="11.99"
+     x="71.150002"
+     y="28.92"
+     id="rect43"
+     style="fill:#3d3d3d" />
+  <rect
+     width="35.189999"
+     height="1.0599999"
+     x="76.980003"
+     y="39.849998"
+     id="rect45"
+     style="fill:#e95420" />
+  <rect
+     width="12"
+     height="11.99"
+     x="41.150002"
+     y="28.92"
+     id="rect3288"
+     style="fill:#3d3d3d;fill-opacity:1" />
+  <rect
+     width="12"
+     height="11.99"
+     x="56.149998"
+     y="28.92"
+     id="rect3290"
+     style="fill:#3d3d3d;fill-opacity:1" />
+</svg>
diff --git a/panels/ubuntu/ubuntu.gresource.xml b/panels/ubuntu/ubuntu.gresource.xml
new file mode 100644
index 0000000..7117d12
--- /dev/null
+++ b/panels/ubuntu/ubuntu.gresource.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<gresources>
+  <gresource prefix="/org/gnome/control-center/ubuntu">
+    <file preprocess="xml-stripblanks">cc-ubuntu-panel.ui</file>
+    <file>theme-dark.svg</file>
+    <file>theme-light.svg</file>
+    <file>theme-standard.svg</file>
+  </gresource>
+</gresources>
diff --git a/po/POTFILES.in b/po/POTFILES.in
index e58a1be..1dec117 100644
--- a/po/POTFILES.in
+++ b/po/POTFILES.in
@@ -209,6 +209,9 @@ panels/thunderbolt/cc-bolt-device-entry.c
 panels/thunderbolt/cc-bolt-panel.c
 panels/thunderbolt/cc-bolt-panel.ui
 panels/thunderbolt/gnome-thunderbolt-panel.desktop.in.in
+panels/ubuntu/cc-ubuntu-panel.c
+panels/ubuntu/cc-ubuntu-panel.ui
+panels/ubuntu/gnome-ubuntu-panel.desktop.in.in
 panels/universal-access/cc-ua-panel.c
 panels/universal-access/cc-ua-panel.ui
 panels/universal-access/gnome-universal-access-panel.desktop.in.in
diff --git a/shell/cc-panel-list.c b/shell/cc-panel-list.c
index 2578590..4056d9e 100644
--- a/shell/cc-panel-list.c
+++ b/shell/cc-panel-list.c
@@ -390,6 +390,7 @@ static const gchar * const panel_order[] = {
   "mobile-broadband",
   "bluetooth",
   "background",
+  "ubuntu",
   "notifications",
   "search",
   "applications",
diff --git a/shell/cc-panel-loader.c b/shell/cc-panel-loader.c
index f203843..bcf8767 100644
--- a/shell/cc-panel-loader.c
+++ b/shell/cc-panel-loader.c
@@ -60,6 +60,7 @@ extern GType cc_sound_panel_get_type (void);
 extern GType cc_bolt_panel_get_type (void);
 #endif /* BUILD_THUNDERBOLT */
 extern GType cc_ua_panel_get_type (void);
+extern GType cc_ubuntu_panel_get_type(void);
 extern GType cc_user_panel_get_type (void);
 #ifdef BUILD_WACOM
 extern GType cc_wacom_panel_get_type (void);
@@ -79,6 +80,7 @@ extern void cc_wifi_panel_static_init_func (void);
 #ifdef BUILD_WACOM
 extern void cc_wacom_panel_static_init_func (void);
 #endif /* BUILD_WACOM */
+extern void cc_ubuntu_panel_static_init_func (void);
 
 #define PANEL_TYPE(name, get_type, init_func) { name, get_type, init_func }
 
@@ -120,6 +122,7 @@ static CcPanelLoaderVtable default_panels[] =
   PANEL_TYPE("search",           cc_search_panel_get_type,               NULL),
   PANEL_TYPE("sharing",          cc_sharing_panel_get_type,              NULL),
   PANEL_TYPE("sound",            cc_sound_panel_get_type,                NULL),
+  PANEL_TYPE("ubuntu",           cc_ubuntu_panel_get_type,               cc_ubuntu_panel_static_init_func),
 #ifdef BUILD_THUNDERBOLT
   PANEL_TYPE("thunderbolt",      cc_bolt_panel_get_type,                 NULL),
 #endif
